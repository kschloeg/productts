"use strict";
var _ = require('lodash');
var ProductStatus = require('../model/ProductStatus');
var Product = require('../model/Product');
var ProductDocumentManager = require('../model/ProductDocumentManager');
var ProductManager = (function () {
    function ProductManager() {
    }
    ProductManager.create = function (product, callback) {
        if (!product)
            return callback(new Error("Cannot create null or undefined Object"), null);
        product.create_date = product.create_date || new Date();
        product.status = product.status || ProductStatus.ACTIVE;
        ProductDocumentManager.create(product, function (createErr, document) {
            if (createErr)
                return callback(createErr, null);
            if (!document)
                return callback(new Error("Create Error"), null);
            callback(null, new Product(document));
        });
    };
    ;
    ProductManager.findById = function (product_id, options, callback) {
        if (!product_id)
            return callback(new Error("Missing ID"), null);
        var criteria = { _id: product_id };
        if (!options || !options.include_inactive) {
            criteria['status'] = ProductStatus.ACTIVE;
        }
        ProductDocumentManager.findOne(criteria, function (findErr, document) {
            if (findErr)
                return callback(findErr, null);
            if (!document)
                return callback(null, null);
            callback(null, new Product(document));
        });
    };
    ProductManager.update = function (product, edits, callback) {
        if (!product || !edits)
            return callback(null, null);
        var productJson = product.toDocument();
        _.assign(productJson, ProductManager.sanitize(edits));
        ProductDocumentManager.findByIdAndUpdate(product.id, productJson, function (updateErr, document) {
            if (updateErr)
                return callback(updateErr, null);
            if (!document)
                return callback(null, null);
            callback(null, new Product(document));
        });
    };
    ProductManager.sanitize = function (product) {
        return _.pick(product, 'name', 'price', 'create_date', 'status');
    };
    return ProductManager;
}());
module.exports = ProductManager;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QvbGliL1Byb2R1Y3RNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFPLENBQUMsV0FBVyxRQUFRLENBQUMsQ0FBQztBQUc3QixJQUFPLGFBQWEsV0FBVyx3QkFBd0IsQ0FBQyxDQUFDO0FBQ3pELElBQU8sT0FBTyxXQUFXLGtCQUFrQixDQUFDLENBQUM7QUFFN0MsSUFBTyxzQkFBc0IsV0FBVyxpQ0FBaUMsQ0FBQyxDQUFDO0FBRzNFO0lBQUE7SUFpREEsQ0FBQztJQWhEaUIscUJBQU0sR0FBcEIsVUFBcUIsT0FBeUIsRUFBRSxRQUFrRDtRQUM5RixFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsd0NBQXdDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUV6RixPQUFPLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUN4RCxPQUFPLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLElBQUksYUFBYSxDQUFDLE1BQU0sQ0FBQztRQUV4RCxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLFVBQUMsU0FBUyxFQUFFLFFBQXlCO1lBQ3hFLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQztnQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNoRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2hFLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7O0lBRWEsdUJBQVEsR0FBdEIsVUFBdUIsVUFBa0IsRUFBRSxPQUF1QyxFQUFFLFFBQWtEO1FBQ2xJLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1lBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVoRSxJQUFJLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsQ0FBQztRQUNuQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7WUFDeEMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7UUFDOUMsQ0FBQztRQUVELHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsVUFBQyxPQUFPLEVBQUUsUUFBeUI7WUFDeEUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzVDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzNDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFYSxxQkFBTSxHQUFwQixVQUFxQixPQUF5QixFQUFFLEtBQVMsRUFBRSxRQUFrRDtRQUN6RyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztZQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRXBELElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN2QyxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFdEQsc0JBQXNCLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxXQUFXLEVBQUUsVUFBQyxTQUFTLEVBQUUsUUFBeUI7WUFDbkcsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2hELEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzNDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFYyx1QkFBUSxHQUF2QixVQUF3QixPQUFXO1FBQy9CLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFDakIsTUFBTSxFQUNOLE9BQU8sRUFDUCxhQUFhLEVBQ2IsUUFBUSxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0FqREEsQUFpREMsSUFBQTtBQUVELGlCQUFTLGNBQWMsQ0FBQyIsImZpbGUiOiJwcm9kdWN0L2xpYi9Qcm9kdWN0TWFuYWdlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5pbXBvcnQgYXN5bmMgPSByZXF1aXJlKCdhc3luYycpO1xuXG5pbXBvcnQgUHJvZHVjdFN0YXR1cyA9IHJlcXVpcmUoJy4uL21vZGVsL1Byb2R1Y3RTdGF0dXMnKTtcbmltcG9ydCBQcm9kdWN0ID0gcmVxdWlyZSgnLi4vbW9kZWwvUHJvZHVjdCcpO1xuaW1wb3J0IFByb2R1Y3RJbnRlcmZhY2UgPSByZXF1aXJlKCcuLi9tb2RlbC9Qcm9kdWN0SW50ZXJmYWNlJyk7XG5pbXBvcnQgUHJvZHVjdERvY3VtZW50TWFuYWdlciA9IHJlcXVpcmUoJy4uL21vZGVsL1Byb2R1Y3REb2N1bWVudE1hbmFnZXInKTtcbmltcG9ydCBQcm9kdWN0RG9jdW1lbnQgPSByZXF1aXJlKCcuLi9tb2RlbC9Qcm9kdWN0RG9jdW1lbnQnKTtcblxuY2xhc3MgUHJvZHVjdE1hbmFnZXIge1xuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlKHByb2R1Y3Q6IFByb2R1Y3RJbnRlcmZhY2UsIGNhbGxiYWNrOiAoZXJyLCBwcm9kdWN0OiBQcm9kdWN0SW50ZXJmYWNlKSA9PiB2b2lkKTogdm9pZCB7XG4gICAgICAgIGlmICghcHJvZHVjdCkgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcihcIkNhbm5vdCBjcmVhdGUgbnVsbCBvciB1bmRlZmluZWQgT2JqZWN0XCIpLCBudWxsKTtcblxuICAgICAgICBwcm9kdWN0LmNyZWF0ZV9kYXRlID0gcHJvZHVjdC5jcmVhdGVfZGF0ZSB8fCBuZXcgRGF0ZSgpO1xuICAgICAgICBwcm9kdWN0LnN0YXR1cyA9IHByb2R1Y3Quc3RhdHVzIHx8IFByb2R1Y3RTdGF0dXMuQUNUSVZFO1xuXG4gICAgICAgIFByb2R1Y3REb2N1bWVudE1hbmFnZXIuY3JlYXRlKHByb2R1Y3QsIChjcmVhdGVFcnIsIGRvY3VtZW50OiBQcm9kdWN0RG9jdW1lbnQpID0+IHtcbiAgICAgICAgICAgIGlmIChjcmVhdGVFcnIpIHJldHVybiBjYWxsYmFjayhjcmVhdGVFcnIsIG51bGwpO1xuICAgICAgICAgICAgaWYgKCFkb2N1bWVudCkgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcihcIkNyZWF0ZSBFcnJvclwiKSwgbnVsbCk7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCBuZXcgUHJvZHVjdChkb2N1bWVudCkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcHVibGljIHN0YXRpYyBmaW5kQnlJZChwcm9kdWN0X2lkOiBzdHJpbmcsIG9wdGlvbnM6IHsgaW5jbHVkZV9pbmFjdGl2ZT86IGJvb2xlYW4gfSwgY2FsbGJhY2s6IChlcnIsIHByb2R1Y3Q6IFByb2R1Y3RJbnRlcmZhY2UpID0+IHZvaWQpOiB2b2lkIHtcbiAgICAgICAgaWYgKCFwcm9kdWN0X2lkKSByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKFwiTWlzc2luZyBJRFwiKSwgbnVsbCk7XG5cbiAgICAgICAgdmFyIGNyaXRlcmlhID0geyBfaWQ6IHByb2R1Y3RfaWQgfTtcbiAgICAgICAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLmluY2x1ZGVfaW5hY3RpdmUpIHtcbiAgICAgICAgICAgIGNyaXRlcmlhWydzdGF0dXMnXSA9IFByb2R1Y3RTdGF0dXMuQUNUSVZFO1xuICAgICAgICB9XG5cbiAgICAgICAgUHJvZHVjdERvY3VtZW50TWFuYWdlci5maW5kT25lKGNyaXRlcmlhLCAoZmluZEVyciwgZG9jdW1lbnQ6IFByb2R1Y3REb2N1bWVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGZpbmRFcnIpIHJldHVybiBjYWxsYmFjayhmaW5kRXJyLCBudWxsKTtcbiAgICAgICAgICAgIGlmICghZG9jdW1lbnQpIHJldHVybiBjYWxsYmFjayhudWxsLCBudWxsKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG5ldyBQcm9kdWN0KGRvY3VtZW50KSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgdXBkYXRlKHByb2R1Y3Q6IFByb2R1Y3RJbnRlcmZhY2UsIGVkaXRzOiB7fSwgY2FsbGJhY2s6IChlcnIsIHByb2R1Y3Q6IFByb2R1Y3RJbnRlcmZhY2UpID0+IHZvaWQpOiB2b2lkIHtcbiAgICAgICAgaWYgKCFwcm9kdWN0IHx8ICFlZGl0cykgcmV0dXJuIGNhbGxiYWNrKG51bGwsIG51bGwpO1xuXG4gICAgICAgIHZhciBwcm9kdWN0SnNvbiA9IHByb2R1Y3QudG9Eb2N1bWVudCgpO1xuICAgICAgICBfLmFzc2lnbihwcm9kdWN0SnNvbiwgUHJvZHVjdE1hbmFnZXIuc2FuaXRpemUoZWRpdHMpKTtcblxuICAgICAgICBQcm9kdWN0RG9jdW1lbnRNYW5hZ2VyLmZpbmRCeUlkQW5kVXBkYXRlKHByb2R1Y3QuaWQsIHByb2R1Y3RKc29uLCAodXBkYXRlRXJyLCBkb2N1bWVudDogUHJvZHVjdERvY3VtZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAodXBkYXRlRXJyKSByZXR1cm4gY2FsbGJhY2sodXBkYXRlRXJyLCBudWxsKTtcbiAgICAgICAgICAgIGlmICghZG9jdW1lbnQpIHJldHVybiBjYWxsYmFjayhudWxsLCBudWxsKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG5ldyBQcm9kdWN0KGRvY3VtZW50KSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIHNhbml0aXplKHByb2R1Y3Q6IHt9KToge30ge1xuICAgICAgICByZXR1cm4gXy5waWNrKHByb2R1Y3QsXG4gICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAncHJpY2UnLFxuICAgICAgICAgICAgJ2NyZWF0ZV9kYXRlJyxcbiAgICAgICAgICAgICdzdGF0dXMnKTtcbiAgICB9XG59XG5cbmV4cG9ydCA9IFByb2R1Y3RNYW5hZ2VyO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
