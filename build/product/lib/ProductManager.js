"use strict";
var _ = require('lodash');
var ProductStatus = require('../model/ProductStatus');
var Product = require('../model/Product');
var ProductDocumentManager = require('../model/ProductDocumentManager');
var ProductManager = (function () {
    function ProductManager() {
    }
    ProductManager.create = function (product, callback) {
        if (!product)
            return callback(new Error("Cannot create null or undefined Object"), null);
        product.create_date = product.create_date || new Date();
        product.status = product.status || ProductStatus.ACTIVE;
        ProductDocumentManager.create(product, function (createErr, document) {
            if (createErr)
                return callback(createErr, null);
            if (!document)
                return callback(new Error("Create Error"), null);
            callback(null, new Product(document));
        });
    };
    ;
    ProductManager.findById = function (product_id, options, callback) {
        if (!product_id)
            return callback(new Error("Missing ID"), null);
        var criteria = { gid: product_id };
        if (!options || !options.include_inactive) {
            criteria['status'] = ProductStatus.ACTIVE;
        }
        ProductDocumentManager.findOne(criteria, function (findErr, document) {
            if (findErr)
                return callback(findErr, null);
            if (!document)
                return callback(null, null);
            callback(null, new Product(document));
        });
    };
    ProductManager.update = function (product, edits, callback) {
        if (!product || !edits)
            return callback(null, null);
        var mongo_id = product.id;
        var productJson = product.toDocument();
        _.assign(productJson, ProductManager.sanitize(edits));
        ProductDocumentManager.findByIdAndUpdate(mongo_id, productJson, function (updateErr, document) {
            if (updateErr)
                return callback(updateErr, null);
            if (!document)
                return callback(null, null);
            callback(null, new Product(document));
        });
    };
    ProductManager.sanitize = function (product) {
        return _.pick(product, 'name', 'gid', 'current_price', 'create_date', 'status');
    };
    return ProductManager;
}());
module.exports = ProductManager;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QvbGliL1Byb2R1Y3RNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFPLENBQUMsV0FBVyxRQUFRLENBQUMsQ0FBQztBQUc3QixJQUFPLGFBQWEsV0FBVyx3QkFBd0IsQ0FBQyxDQUFDO0FBQ3pELElBQU8sT0FBTyxXQUFXLGtCQUFrQixDQUFDLENBQUM7QUFFN0MsSUFBTyxzQkFBc0IsV0FBVyxpQ0FBaUMsQ0FBQyxDQUFDO0FBRzNFO0lBQUE7SUFtREEsQ0FBQztJQWxEaUIscUJBQU0sR0FBcEIsVUFBcUIsT0FBeUIsRUFBRSxRQUFrRDtRQUM5RixFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsd0NBQXdDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUV6RixPQUFPLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUN4RCxPQUFPLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLElBQUksYUFBYSxDQUFDLE1BQU0sQ0FBQztRQUV4RCxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLFVBQUMsU0FBUyxFQUFFLFFBQXlCO1lBQ3hFLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQztnQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNoRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2hFLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7O0lBRWEsdUJBQVEsR0FBdEIsVUFBdUIsVUFBa0IsRUFBRSxPQUF1QyxFQUFFLFFBQWtEO1FBQ2xJLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1lBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVoRSxJQUFJLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsQ0FBQztRQUNuQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7WUFDeEMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7UUFDOUMsQ0FBQztRQUVELHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsVUFBQyxPQUFPLEVBQUUsUUFBeUI7WUFDeEUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzVDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzNDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFYSxxQkFBTSxHQUFwQixVQUFxQixPQUF5QixFQUFFLEtBQVMsRUFBRSxRQUFrRDtRQUN6RyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztZQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRXBELElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDMUIsSUFBSSxXQUFXLEdBQUcsT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUV0RCxzQkFBc0IsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsV0FBVyxFQUFFLFVBQUMsU0FBUyxFQUFFLFFBQXlCO1lBQ2pHLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQztnQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNoRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztZQUMzQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRWMsdUJBQVEsR0FBdkIsVUFBd0IsT0FBVztRQUMvQixNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQ2pCLE1BQU0sRUFDTixLQUFLLEVBQ0wsZUFBZSxFQUNmLGFBQWEsRUFDYixRQUFRLENBQUMsQ0FBQztJQUNsQixDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQW5EQSxBQW1EQyxJQUFBO0FBRUQsaUJBQVMsY0FBYyxDQUFDIiwiZmlsZSI6InByb2R1Y3QvbGliL1Byb2R1Y3RNYW5hZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmltcG9ydCBhc3luYyA9IHJlcXVpcmUoJ2FzeW5jJyk7XG5cbmltcG9ydCBQcm9kdWN0U3RhdHVzID0gcmVxdWlyZSgnLi4vbW9kZWwvUHJvZHVjdFN0YXR1cycpO1xuaW1wb3J0IFByb2R1Y3QgPSByZXF1aXJlKCcuLi9tb2RlbC9Qcm9kdWN0Jyk7XG5pbXBvcnQgUHJvZHVjdEludGVyZmFjZSA9IHJlcXVpcmUoJy4uL21vZGVsL1Byb2R1Y3RJbnRlcmZhY2UnKTtcbmltcG9ydCBQcm9kdWN0RG9jdW1lbnRNYW5hZ2VyID0gcmVxdWlyZSgnLi4vbW9kZWwvUHJvZHVjdERvY3VtZW50TWFuYWdlcicpO1xuaW1wb3J0IFByb2R1Y3REb2N1bWVudCA9IHJlcXVpcmUoJy4uL21vZGVsL1Byb2R1Y3REb2N1bWVudCcpO1xuXG5jbGFzcyBQcm9kdWN0TWFuYWdlciB7XG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGUocHJvZHVjdDogUHJvZHVjdEludGVyZmFjZSwgY2FsbGJhY2s6IChlcnIsIHByb2R1Y3Q6IFByb2R1Y3RJbnRlcmZhY2UpID0+IHZvaWQpOiB2b2lkIHtcbiAgICAgICAgaWYgKCFwcm9kdWN0KSByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKFwiQ2Fubm90IGNyZWF0ZSBudWxsIG9yIHVuZGVmaW5lZCBPYmplY3RcIiksIG51bGwpO1xuXG4gICAgICAgIHByb2R1Y3QuY3JlYXRlX2RhdGUgPSBwcm9kdWN0LmNyZWF0ZV9kYXRlIHx8IG5ldyBEYXRlKCk7XG4gICAgICAgIHByb2R1Y3Quc3RhdHVzID0gcHJvZHVjdC5zdGF0dXMgfHwgUHJvZHVjdFN0YXR1cy5BQ1RJVkU7XG5cbiAgICAgICAgUHJvZHVjdERvY3VtZW50TWFuYWdlci5jcmVhdGUocHJvZHVjdCwgKGNyZWF0ZUVyciwgZG9jdW1lbnQ6IFByb2R1Y3REb2N1bWVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGNyZWF0ZUVycikgcmV0dXJuIGNhbGxiYWNrKGNyZWF0ZUVyciwgbnVsbCk7XG4gICAgICAgICAgICBpZiAoIWRvY3VtZW50KSByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKFwiQ3JlYXRlIEVycm9yXCIpLCBudWxsKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG5ldyBQcm9kdWN0KGRvY3VtZW50KSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBwdWJsaWMgc3RhdGljIGZpbmRCeUlkKHByb2R1Y3RfaWQ6IHN0cmluZywgb3B0aW9uczogeyBpbmNsdWRlX2luYWN0aXZlPzogYm9vbGVhbiB9LCBjYWxsYmFjazogKGVyciwgcHJvZHVjdDogUHJvZHVjdEludGVyZmFjZSkgPT4gdm9pZCk6IHZvaWQge1xuICAgICAgICBpZiAoIXByb2R1Y3RfaWQpIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoXCJNaXNzaW5nIElEXCIpLCBudWxsKTtcblxuICAgICAgICB2YXIgY3JpdGVyaWEgPSB7IGdpZDogcHJvZHVjdF9pZCB9O1xuICAgICAgICBpZiAoIW9wdGlvbnMgfHwgIW9wdGlvbnMuaW5jbHVkZV9pbmFjdGl2ZSkge1xuICAgICAgICAgICAgY3JpdGVyaWFbJ3N0YXR1cyddID0gUHJvZHVjdFN0YXR1cy5BQ1RJVkU7XG4gICAgICAgIH1cblxuICAgICAgICBQcm9kdWN0RG9jdW1lbnRNYW5hZ2VyLmZpbmRPbmUoY3JpdGVyaWEsIChmaW5kRXJyLCBkb2N1bWVudDogUHJvZHVjdERvY3VtZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZmluZEVycikgcmV0dXJuIGNhbGxiYWNrKGZpbmRFcnIsIG51bGwpO1xuICAgICAgICAgICAgaWYgKCFkb2N1bWVudCkgcmV0dXJuIGNhbGxiYWNrKG51bGwsIG51bGwpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgbmV3IFByb2R1Y3QoZG9jdW1lbnQpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyB1cGRhdGUocHJvZHVjdDogUHJvZHVjdEludGVyZmFjZSwgZWRpdHM6IHt9LCBjYWxsYmFjazogKGVyciwgcHJvZHVjdDogUHJvZHVjdEludGVyZmFjZSkgPT4gdm9pZCk6IHZvaWQge1xuICAgICAgICBpZiAoIXByb2R1Y3QgfHwgIWVkaXRzKSByZXR1cm4gY2FsbGJhY2sobnVsbCwgbnVsbCk7XG5cbiAgICAgICAgdmFyIG1vbmdvX2lkID0gcHJvZHVjdC5pZDtcbiAgICAgICAgdmFyIHByb2R1Y3RKc29uID0gcHJvZHVjdC50b0RvY3VtZW50KCk7XG4gICAgICAgIF8uYXNzaWduKHByb2R1Y3RKc29uLCBQcm9kdWN0TWFuYWdlci5zYW5pdGl6ZShlZGl0cykpO1xuXG4gICAgICAgIFByb2R1Y3REb2N1bWVudE1hbmFnZXIuZmluZEJ5SWRBbmRVcGRhdGUobW9uZ29faWQsIHByb2R1Y3RKc29uLCAodXBkYXRlRXJyLCBkb2N1bWVudDogUHJvZHVjdERvY3VtZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAodXBkYXRlRXJyKSByZXR1cm4gY2FsbGJhY2sodXBkYXRlRXJyLCBudWxsKTtcbiAgICAgICAgICAgIGlmICghZG9jdW1lbnQpIHJldHVybiBjYWxsYmFjayhudWxsLCBudWxsKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG5ldyBQcm9kdWN0KGRvY3VtZW50KSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIHNhbml0aXplKHByb2R1Y3Q6IHt9KToge30ge1xuICAgICAgICByZXR1cm4gXy5waWNrKHByb2R1Y3QsXG4gICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAnZ2lkJyxcbiAgICAgICAgICAgICdjdXJyZW50X3ByaWNlJyxcbiAgICAgICAgICAgICdjcmVhdGVfZGF0ZScsXG4gICAgICAgICAgICAnc3RhdHVzJyk7XG4gICAgfVxufVxuXG5leHBvcnQgPSBQcm9kdWN0TWFuYWdlcjtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
